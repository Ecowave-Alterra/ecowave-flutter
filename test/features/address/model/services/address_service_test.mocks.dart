// Mocks generated by Mockito 5.4.2 from annotations
// in ecowave/test/features/address/model/services/address_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:ecowave/features/address/model/models/address_model.dart'
    as _i6;
import 'package:ecowave/features/address/model/models/address_request.dart'
    as _i7;
import 'package:ecowave/features/address/model/models/city_model.dart' as _i5;
import 'package:ecowave/features/address/model/models/province_model.dart'
    as _i4;
import 'package:ecowave/features/address/model/services/address_service.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AddressService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddressService extends _i1.Mock implements _i2.AddressService {
  MockAddressService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ProvinceModel>> getProvinces() => (super.noSuchMethod(
        Invocation.method(
          #getProvinces,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.ProvinceModel>>.value(<_i4.ProvinceModel>[]),
      ) as _i3.Future<List<_i4.ProvinceModel>>);
  @override
  _i3.Future<List<_i5.CityModel>> getCities(int? provinceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCities,
          [provinceId],
        ),
        returnValue: _i3.Future<List<_i5.CityModel>>.value(<_i5.CityModel>[]),
      ) as _i3.Future<List<_i5.CityModel>>);
  @override
  _i3.Future<List<_i6.AddressModel>> getAddresses() => (super.noSuchMethod(
        Invocation.method(
          #getAddresses,
          [],
        ),
        returnValue:
            _i3.Future<List<_i6.AddressModel>>.value(<_i6.AddressModel>[]),
      ) as _i3.Future<List<_i6.AddressModel>>);
  @override
  _i3.Future<bool> createAddresses(_i7.AddressRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAddresses,
          [request],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<bool> updateAddresses(
    int? id,
    _i7.AddressRequest? request,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAddresses,
          [
            id,
            request,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
